{
    // JSHint Options: http://www.jshint.com/docs/options/
    //
    // There is JSHint Configuration, Strict Edition, see this gist
    // https://gist.github.com/haschek/2595796/raw/500806cafd239ace8dc94c998a8d4f7270947b12/.jshintrc

    // == Enforcing Options ===============================================

    "bitwise": true,    // Prohibit bitwise operators (&, |, ^, etc.).
    "curly": true,  // Require {} for every new block or scope.
    "eqeqeq": true, // Require triple equals i.e. `===`.
    "immed": true,  // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
    "newcap": true, // Require capitalization of all constructor functions e.g. `new F()`.
    "noarg": true,  // Prohibit use of `arguments.caller` and `arguments.callee`.
    "undef": true,  // Require all non-global variables be declared before they are used.
    "strict": true, // Require `use strict` pragma in every file.

    // == Relaxing Options ================================================
    //
    // These options allow you to suppress certain types of warnings. Use
    // them only if you are absolutely positive that you know what you are
    // doing.

    "esnext": true, // Allow ES.next specific features such as `const` and `let`
    "smarttabs": true,  // Tolerate mixed tabs and spaces when the latter are used for alignmnent only.

    // == Environments ====================================================
    //
    // These options pre-define global variables that are exposed by
    // popular JavaScript libraries and runtime environmentsâ€”such as
    // browser or node.js.

    "browser": true,    // Standard browser globals e.g. `window`, `document`.
    "node": true,   // Enable globals available when code is running inside of the NodeJS runtime environment.
    "jquery": true, // Enable globals exposed by jQuery JavaScript library.

    "globals": {
        "describe": false,
        "xdescribe": false,
        "it": false,
        "xit": false,
        "by": false,
        "browser": false,
        "expect": false,
        "before": false,
        "beforeEach": false,
        "after": false,
        "afterEach": false,
        "inject": false,
        "element": false,
        "angular": false,
        "exports": false,
        "console": false,
        "spyOn": false,
        "jasmine": false,
        "alert": false,
        "X2JS": false
    }
}